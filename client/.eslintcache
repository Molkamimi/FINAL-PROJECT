[{"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\Signup\\Signup.js":"4","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\Dashbord\\Dashbord.js":"5","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\store\\store.js":"6","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\index.js":"7","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\user.js":"8","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\user.js":"9","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\router\\PrivateRoute.js":"10","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\user.js":"11","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\PostList.js":"12","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\Add.js":"13","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\posts.js":"14","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\posts.js":"15","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\posts.js":"16","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\Post.js":"17","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\NavBar\\NavBar.js":"18","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\PostStyles.js":"19","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\PostStylesList.js":"20","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\edit.js":"21","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\edit.js":"22","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\edit.js":"23","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\ListComment\\ListComment.js":"24","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\AddComment\\AddComment.js":"25","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\comment.js":"26","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\editComment\\editComment.js":"27","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\comment.js":"28","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\comment.js":"29","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\singleUser\\singleUser.js":"30","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\searchActions.js":"31","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\searchPost.js":"32","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\search.js":"33"},{"size":889,"mtime":1609149633505,"results":"34","hashOfConfig":"35"},{"size":805,"mtime":1610021893363,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":5369,"mtime":1609252839798,"results":"38","hashOfConfig":"35"},{"size":1415,"mtime":1609850199739,"results":"39","hashOfConfig":"35"},{"size":323,"mtime":1608203078349,"results":"40","hashOfConfig":"35"},{"size":384,"mtime":1609936517902,"results":"41","hashOfConfig":"35"},{"size":1066,"mtime":1608034940966,"results":"42","hashOfConfig":"35"},{"size":262,"mtime":1608022976709,"results":"43","hashOfConfig":"35"},{"size":373,"mtime":1608459538267,"results":"44","hashOfConfig":"35"},{"size":1762,"mtime":1608033863410,"results":"45","hashOfConfig":"35"},{"size":944,"mtime":1609923917214,"results":"46","hashOfConfig":"35"},{"size":4216,"mtime":1610023184540,"results":"47","hashOfConfig":"35"},{"size":977,"mtime":1609937474380,"results":"48","hashOfConfig":"35"},{"size":380,"mtime":1609697885990,"results":"49","hashOfConfig":"35"},{"size":1698,"mtime":1609937967728,"results":"50","hashOfConfig":"35"},{"size":3864,"mtime":1610011261873,"results":"51","hashOfConfig":"35"},{"size":2113,"mtime":1609927743083,"results":"52","hashOfConfig":"35"},{"size":1013,"mtime":1610014998667,"results":"53","hashOfConfig":"35"},{"size":280,"mtime":1609403962623,"results":"54","hashOfConfig":"35"},{"size":414,"mtime":1609411822910,"results":"55","hashOfConfig":"35"},{"size":226,"mtime":1609411822910,"results":"56","hashOfConfig":"35"},{"size":88,"mtime":1609409637021,"results":"57","hashOfConfig":"35"},{"size":3017,"mtime":1609936077889,"results":"58","hashOfConfig":"35"},{"size":111,"mtime":1609840981620,"results":"59","hashOfConfig":"35"},{"size":480,"mtime":1609839134545,"results":"60","hashOfConfig":"35"},{"size":1318,"mtime":1609840022164,"results":"61","hashOfConfig":"35"},{"size":161,"mtime":1609839134655,"results":"62","hashOfConfig":"35"},{"size":950,"mtime":1609839649827,"results":"63","hashOfConfig":"35"},{"size":3241,"mtime":1610011062877,"results":"64","hashOfConfig":"35"},{"size":149,"mtime":1609927513007,"results":"65","hashOfConfig":"35"},{"size":37,"mtime":1609927513071,"results":"66","hashOfConfig":"35"},{"size":226,"mtime":1609936734561,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1rcnu2k",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\index.js",[],["146","147"],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\App.js",["148"],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\Signup\\Signup.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\Dashbord\\Dashbord.js",["149","150","151","152"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../JS/actions/user\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport PostList from \"../../Components/PostList\";\r\nimport Add from \"../../Components/Add\";\r\nimport AddComment from \"../AddComment/AddComment\";\r\nimport ListComment from \"../ListComment/ListComment\";\r\n\r\nimport Post from \"../Post\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport SingleUser from \"../singleUser/singleUser\";\r\n\r\nconst Dashbord = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const posts = useSelector((state) => state.postReducer.posts);\r\n  const loadPosts = useSelector((state) => state.postReducer.loadPosts);\r\n\r\n  console.log(posts, loadPosts);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <button\r\n        onClick={() => {\r\n          dispatch(logout());\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n      <div>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/Dashbord\"\r\n            component={PostList}\r\n            render={() => <PostList posts={posts} />}\r\n          />\r\n\r\n          <Route path=\"/Dashbord/add\" component={Add} />\r\n        </Switch>\r\n      </div>\r\n      <div>\r\n        {\" \"}\r\n        <AddComment />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashbord;\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\store\\store.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\index.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\user.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\user.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\router\\PrivateRoute.js",["153"],"import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isAuth = localStorage.getItem(\"token\");\r\n\r\n  if (isAuth) {\r\n    return <Route component={Component} {...rest} />;\r\n  }\r\n  return <Redirect path=\"/\" />;\r\n};\r\nconst headers = new Headers();\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\user.js",["154"],"import {\r\n  LOAD_USER,\r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  FAIL_USER,\r\n  LOGOUT_USER,\r\n  CURRENT_USER,\r\n} from \"../const/user\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const registerUser = (user, history) => async (dispatch) => {\r\n  dispatch({ type: LOAD_USER });\r\n  try {\r\n    const result = await axios.post(\"/user/register\", user);\r\n    //{user,msg,token}\r\n    // localStorage.setItem(\"token\",result.data.token)\r\n    dispatch({ type: REGISTER_USER, payload: result.data });\r\n    history.push(\"/dashbord\");\r\n  } catch (error) {\r\n    const { errors, msg } = error.response.data;\r\n    if (Array.isArray(errors)) {\r\n      errors.forEach((err) => alert(err.msg));\r\n    }\r\n    // dispatch({ type: FAIL_USER, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const loginUser = (user, history) => async (dispatch) => {\r\n  dispatch({ type: LOAD_USER });\r\n  try {\r\n    const result = await axios.post(\"/user/login\", user);\r\n    //{user,msg,token}\r\n    dispatch({ type: LOGIN_USER, payload: result.data });\r\n    history.push(\"/dashbord\");\r\n  } catch (error) {\r\n    const { errors, msg } = error.response.data;\r\n    if (Array.isArray(errors)) {\r\n      errors.forEach((err) => alert(err.msg));\r\n    }\r\n    if (msg) {\r\n      alert(msg);\r\n    }\r\n  }\r\n};\r\n\r\nexport const current = () => async (dispatch) => {\r\n  dispatch({ type: LOAD_USER });\r\n  const options = {\r\n    headers: {\r\n      authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  try {\r\n    let result = await axios.get(\"/user/current\", options);\r\n    //  user\r\n    dispatch({ type: CURRENT_USER, payload: result.data.user });\r\n  } catch (error) {\r\n    dispatch({ type: FAIL_USER, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_USER,\r\n  };\r\n};\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\PostList.js",["155","156","157","158","159"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport useStyles from \"./PostStylesList\";\r\nimport Post from \"./Post\";\r\nimport { getPosts } from \"../JS/actions/posts\";\r\nimport SingleUser from \"../Components/singleUser/singleUser\";\r\nimport ListComment from \"../Components/ListComment/ListComment\";\r\nconst PostList = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer.posts);\r\n  const loadPosts = useSelector((state) => state.postReducer.loadPosts);\r\n  const [Search, setSearch] = useState(\"\");\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [Search]);\r\n  return (\r\n    <div>\r\n      {loadPosts ? (\r\n        <h2>loading</h2>\r\n      ) : (\r\n        posts.map((el) => <Post key={el._id} post={el} key={el._id} />)\r\n      )}\r\n\r\n      <ListComment />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\Add.js",["160","161","162"],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\posts.js",["163"],"//import const\r\nimport {\r\n  GET_POSTS_FAIL,\r\n  GET_POSTS_SUCCESS,\r\n  GET_POSTS_LOAD,\r\n  GET_POST,\r\n  LIKE_POST,\r\n} from \"../const/posts\";\r\nimport { GET_TEXT } from \"../const/searchPost\";\r\n\r\n//INITIALSTATE\r\nconst initialState = {\r\n  posts: [],\r\n  loadPosts: false,\r\n  errors: null,\r\n  post: {},\r\n  searched: \"\",\r\n};\r\nexport const postReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_POSTS_LOAD:\r\n      return { ...state, loadPosts: true };\r\n    case GET_POSTS_SUCCESS:\r\n      return { ...state, posts: payload, loadPosts: false };\r\n    case GET_POSTS_FAIL:\r\n      return { ...state, loadPosts: false, errors: payload };\r\n    case GET_POST:\r\n      return { ...state, post: payload };\r\n    case GET_TEXT:\r\n      return {\r\n        ...state,\r\n        searched: payload,\r\n        posts: state.posts.filter((el) =>\r\n          el.creator.includes(state.searched.toLowerCase())\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\posts.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\posts.js",["164","165","166"],"import {\r\n  GET_POSTS_FAIL,\r\n  GET_POSTS_LOAD,\r\n  GET_POSTS_SUCCESS,\r\n  DELETE_POST,\r\n  GET_POST,\r\n  LIKE_POST,\r\n  POST_PUB,\r\n  EDIT_POST,\r\n} from \"../const/posts\";\r\nimport axios from \"axios\";\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  dispatch({ type: GET_POSTS_LOAD });\r\n  try {\r\n    let result = await axios.get(\"/api/post\");\r\n    dispatch({ type: GET_POSTS_SUCCESS, payload: result.data.response });\r\n  } catch (error) {\r\n    dispatch({ type: GET_POSTS_FAIL, payload: error });\r\n    console.log(error);\r\n  }\r\n};\r\nexport const deletePost = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/post/${id}`)\r\n    .then((res) => dispatch(getPosts()))\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const getPost = (id) => async (dispatch) => {\r\n  await axios\r\n    .get(`/api/post/${id}`)\r\n    .then((res) => dispatch({ type: GET_POST, payload: res.data.response }))\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const likePost = (id) => async (dispatch) => {\r\n  await axios\r\n    .post(`/api/post/${id}`)\r\n    .then((res) => dispatch({ type: LIKE_POST, payload: res.data.response }))\r\n    .then((res) => dispatch(getPosts()))\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const postPub = (post) => async (dispatch) => {\r\n  const options = {\r\n    headers: {\r\n      authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  await axios\r\n    .post(`/api/post/add`, post, options)\r\n    .then((res) => dispatch(getPosts()))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const editPost = (id, post) => async (dispatch) => {\r\n  await axios\r\n    .put(`/api/post/${id}`, post)\r\n    .then((res) => dispatch(getPosts()))\r\n    .catch((err) => console.log(err));\r\n};\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\Post.js",["167","168","169","170","171"],"import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ThumbAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport moment from \"moment\";\r\nimport useStyles from \"./PostStyles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deletePost, getPost, likePost } from \"../JS/actions/posts\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TOGGLE_FALSE, TOGGLE_TRUE } from \"../JS/const/edit\";\r\nimport { toggleTrue } from \"../JS/actions/edit\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../JS/actions/comment\";\r\nimport ListComment from \"./ListComment/ListComment\";\r\nimport SingleUser from \"../Components/singleUser/singleUser\";\r\nconst Post = ({ post }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [item, setItem] = useState(\"\");\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia className={classes.media} title={post.title} />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">\r\n          {moment(post.createdAt).fromNow()}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button\r\n          style={{ color: \"white\", fontSize: \"10px\" }}\r\n          size=\"small\"\r\n          onClick={() => {}}\r\n        >\r\n          <MoreHorizIcon fontSize=\"default\" />\r\n        </Button>\r\n        <input\r\n          value={item}\r\n          onChange={(e) => setItem(e.target.value)}\r\n          size=\"40\"\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            dispatch(addItem({ id: Math.random(), todo: item, done: false }));\r\n            setItem(\"\");\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n          {post.tags.map((tag) => `#${tag} `)}\r\n        </Typography>\r\n      </div>\r\n      <Typography\r\n        className={classes.title}\r\n        gutterBottom\r\n        variant=\"h6\"\r\n        component=\"h2\"\r\n      >\r\n        {post.title}\r\n      </Typography>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {post.message}\r\n        </Typography>\r\n        <div className=\"comment-section\">{/* <ListComment /> */}</div>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            dispatch(likePost(post._id));\r\n          }}\r\n        >\r\n          <ThumbAltIcon fontSize=\"small\" /> Like {post.likeCount}\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            dispatch(deletePost(post._id));\r\n          }}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" /> Delete\r\n        </Button>\r\n        <Link to={`/Dashbord/add/${post._id}`}>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              dispatch(getPost(post._id));\r\n              dispatch(toggleTrue());\r\n            }}\r\n          >\r\n            EDIT\r\n          </Button>\r\n        </Link>\r\n        <Link to={`/add/${post._id} `}>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            fontSize=\"small\"\r\n            onClick={() => {\r\n              dispatch(getPost(post._id));\r\n              dispatch(toggleTrue());\r\n            }}\r\n          >\r\n            Profile\r\n          </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default Post;\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\NavBar\\NavBar.js",["172"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormControl, Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSearch } from \"../../JS/actions/searchActions\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\n\r\nconst NavBar = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        expand=\"md\"\r\n        className=\"mr-3\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          backgroundColor: \"black\",\r\n        }}\r\n      >\r\n        <Link to=\"/Dashbord/Add\" style={{ color: \"blue\" }}>\r\n          Home\r\n        </Link>\r\n        <NavbarToggler />\r\n        <Collapse navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <Link\r\n                to=\"/Dashbord\"\r\n                style={{\r\n                  padding: \"10%\",\r\n                  color: \"blue\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Publish\r\n              </Link>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <NavbarText>\r\n            <Button\r\n              style={{\r\n                fontSize: \"medium\",\r\n                color: \"rgb(29, 69, 248)\",\r\n                fontStyle: \"italic\",\r\n                backgroundColor: \"rgb(29, 69, 248)\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"btn btn-primary px-5\"\r\n                style={{ backgroundColor: \"black\", borderColor: \"black\" }}\r\n              >\r\n                <Form inline>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    className=\"mr-sm-2\"\r\n                    onChange={(e) => {\r\n                      dispatch(setSearch(e.target.value));\r\n                    }}\r\n                  />\r\n                </Form>\r\n              </div>\r\n            </Button>\r\n          </NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\PostStyles.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\PostStylesList.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\edit.js",["173"],"import { toggleTrue } from \"../actions/edit\";\r\nimport { TOGGLE_FALSE, TOGGLE_TRUE } from \"../const/edit\";\r\n\r\nconst initialState = {\r\n  edit: false,\r\n};\r\nexport const editReducer = (state = initialState, { type }) => {\r\n  switch (type) {\r\n    case TOGGLE_TRUE:\r\n      return { ...state, edit: true };\r\n\r\n    case TOGGLE_FALSE:\r\n      return { ...state, edit: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\edit.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\edit.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\ListComment\\ListComment.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\AddComment\\AddComment.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\comment.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\editComment\\editComment.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\comment.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\comment.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\Components\\singleUser\\singleUser.js",["174","175","176","177","178"],"import { urlencoded } from \"body-parser\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardLink,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardImg,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport { postPub, editPost } from \"../../JS/actions/posts\";\r\n\r\nconst SingleUser = () => {\r\n  const postReducer = useSelector((state) => state.postReducer.post);\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    creator: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n    likeCount: \"\",\r\n    createdAt: \"\",\r\n  });\r\n  const edit = useSelector((state) => state.editReducer.edit);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    edit\r\n      ? setPost(postReducer)\r\n      : setPost({\r\n          title: \"\",\r\n          message: \"\",\r\n          creator: \"\",\r\n          tags: \"\",\r\n          selectedFile: \"\",\r\n          likeCount: \"\",\r\n          createdAt: \"\",\r\n        });\r\n  }, [edit, postReducer]);\r\n  const handlePost = () => {\r\n    if (!edit) {\r\n      dispatch(postPub(post));\r\n    } else {\r\n      dispatch(editPost(postReducer._id, post));\r\n    }\r\n  };\r\n  return (\r\n    <Card\r\n      style={{\r\n        backgroundColor: \"#9dd4dc\",\r\n        fontStyle: \"italic\",\r\n        fontSize: \"large\",\r\n      }}\r\n    >\r\n      <CardImg\r\n        top\r\n        width=\"20px\"\r\n        title={post.title}\r\n        onChange={(e) => {\r\n          setPost({ ...post, title: e.target.value });\r\n        }}\r\n      />\r\n      <CardBody>\r\n        <CardTitle\r\n          tag=\"h6\"\r\n          onChange={(e) => {\r\n            setPost({ ...post, creator: e.target.value });\r\n          }}\r\n        >\r\n          {\" \"}\r\n          creator: {post.creator}\r\n        </CardTitle>\r\n\r\n        <CardText>\r\n          <small\r\n            className=\"text-muted\"\r\n            onChange={(e) => {\r\n              setPost({ ...post, message: e.target.value });\r\n            }}\r\n          >\r\n            message:{post.message}\r\n          </small>\r\n        </CardText>\r\n        <CardText>\r\n          <small\r\n            className=\"text-muted\"\r\n            onChange={(e) => {\r\n              setPost({ ...post, tags: e.target.value });\r\n            }}\r\n          >\r\n            tags:{post.tags}\r\n          </small>\r\n        </CardText>\r\n        <CardText>\r\n          <CardText>\r\n            <small\r\n              className=\"text-muted\"\r\n              onChange={(e) => {\r\n                setPost({ ...post, likeCount: e.target.value });\r\n              }}\r\n            >\r\n              likeCount:{post.likeCount}\r\n            </small>\r\n          </CardText>\r\n          <small\r\n            className=\"text-muted\"\r\n            onChange={(e) => {\r\n              setPost({ ...post, createdAt: e.target.value });\r\n            }}\r\n          >\r\n            createdAt:{post.createdAt}\r\n          </small>\r\n        </CardText>\r\n        <CardText>\r\n          <small\r\n            className=\"text-muted\"\r\n            onChange={(e) => {\r\n              setPost({ ...post, selectedFile: e.target.value });\r\n            }}\r\n          >\r\n            selectedFile:{post.selectedFile}\r\n          </small>\r\n        </CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SingleUser;\r\n","C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\actions\\searchActions.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\const\\searchPost.js",[],"C:\\Users\\Asus\\Desktop\\authentification\\client\\src\\JS\\reducers\\search.js",["179"],"import { GET_TEXT } from \"../const/searchPost\";\r\n\r\nconst intialState = {\r\n  text: \"\",\r\n};\r\nexport const filterReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":16,"column":6,"nodeType":"186","endLine":16,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"192","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":19},{"ruleId":"188","severity":1,"message":"193","line":10,"column":8,"nodeType":"190","messageId":"191","endLine":10,"endColumn":12},{"ruleId":"188","severity":1,"message":"194","line":12,"column":8,"nodeType":"190","messageId":"191","endLine":12,"endColumn":18},{"ruleId":"188","severity":1,"message":"195","line":11,"column":7,"nodeType":"190","messageId":"191","endLine":11,"endColumn":14},{"ruleId":"188","severity":1,"message":"196","line":21,"column":21,"nodeType":"190","messageId":"191","endLine":21,"endColumn":24},{"ruleId":"188","severity":1,"message":"194","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":18},{"ruleId":"188","severity":1,"message":"197","line":12,"column":18,"nodeType":"190","messageId":"191","endLine":12,"endColumn":27},{"ruleId":"188","severity":1,"message":"198","line":13,"column":9,"nodeType":"190","messageId":"191","endLine":13,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":16,"column":6,"nodeType":"186","endLine":16,"endColumn":14,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":22,"column":56,"nodeType":"202","endLine":22,"endColumn":68},{"ruleId":"188","severity":1,"message":"203","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":13},{"ruleId":"188","severity":1,"message":"204","line":9,"column":23,"nodeType":"190","messageId":"191","endLine":9,"endColumn":33},{"ruleId":"205","severity":1,"message":"206","line":112,"column":39,"nodeType":"207","endLine":112,"endColumn":70},{"ruleId":"188","severity":1,"message":"208","line":7,"column":3,"nodeType":"190","messageId":"191","endLine":7,"endColumn":12},{"ruleId":"188","severity":1,"message":"209","line":5,"column":3,"nodeType":"190","messageId":"191","endLine":5,"endColumn":14},{"ruleId":"188","severity":1,"message":"210","line":8,"column":3,"nodeType":"190","messageId":"191","endLine":8,"endColumn":11},{"ruleId":"188","severity":1,"message":"211","line":9,"column":3,"nodeType":"190","messageId":"191","endLine":9,"endColumn":12},{"ruleId":"188","severity":1,"message":"212","line":18,"column":10,"nodeType":"190","messageId":"191","endLine":18,"endColumn":22},{"ruleId":"188","severity":1,"message":"213","line":18,"column":24,"nodeType":"190","messageId":"191","endLine":18,"endColumn":35},{"ruleId":"188","severity":1,"message":"214","line":20,"column":10,"nodeType":"190","messageId":"191","endLine":20,"endColumn":17},{"ruleId":"188","severity":1,"message":"192","line":22,"column":8,"nodeType":"190","messageId":"191","endLine":22,"endColumn":19},{"ruleId":"188","severity":1,"message":"194","line":23,"column":8,"nodeType":"190","messageId":"191","endLine":23,"endColumn":18},{"ruleId":"188","severity":1,"message":"215","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"188","severity":1,"message":"204","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":20},{"ruleId":"188","severity":1,"message":"216","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":20},{"ruleId":"188","severity":1,"message":"217","line":8,"column":3,"nodeType":"190","messageId":"191","endLine":8,"endColumn":11},{"ruleId":"188","severity":1,"message":"218","line":10,"column":3,"nodeType":"190","messageId":"191","endLine":10,"endColumn":15},{"ruleId":"188","severity":1,"message":"219","line":12,"column":3,"nodeType":"190","messageId":"191","endLine":12,"endColumn":10},{"ruleId":"188","severity":1,"message":"220","line":43,"column":9,"nodeType":"190","messageId":"191","endLine":43,"endColumn":19},{"ruleId":"188","severity":1,"message":"221","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":18},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["224"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ListComment' is defined but never used.","'Post' is defined but never used.","'SingleUser' is defined but never used.","'headers' is assigned a value but never used.","'msg' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'classes' is assigned a value but never used.",["225"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'posts' is defined but never used.","'toggleTrue' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LIKE_POST' is defined but never used.","'DELETE_POST' is defined but never used.","'POST_PUB' is defined but never used.","'EDIT_POST' is defined but never used.","'TOGGLE_FALSE' is defined but never used.","'TOGGLE_TRUE' is defined but never used.","'connect' is defined but never used.","'useState' is defined but never used.","'urlencoded' is defined but never used.","'CardLink' is defined but never used.","'CardSubtitle' is defined but never used.","'Spinner' is defined but never used.","'handlePost' is assigned a value but never used.","'GET_TEXT' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [dispatch]",{"range":"230","text":"231"},"Update the dependencies array to be: [Search, dispatch]",{"range":"232","text":"233"},[522,524],"[dispatch]",[690,698],"[Search, dispatch]"]